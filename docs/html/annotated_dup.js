var annotated_dup =
[
    [ "Assignment", "classAssignment.html", "classAssignment" ],
    [ "astNode", "classastNode.html", null ],
    [ "binaryExpression", "classbinaryExpression.html", "classbinaryExpression" ],
    [ "Block", "classBlock.html", "classBlock" ],
    [ "boolLiteral", "classboolLiteral.html", "classboolLiteral" ],
    [ "breakStatement", "classbreakStatement.html", "classbreakStatement" ],
    [ "calloutArgument", "classcalloutArgument.html", "classcalloutArgument" ],
    [ "calloutArguments", "classcalloutArguments.html", "classcalloutArguments" ],
    [ "calloutCall", "classcalloutCall.html", "classcalloutCall" ],
    [ "charLiteral", "classcharLiteral.html", "classcharLiteral" ],
    [ "Constructs", "classConstructs.html", "classConstructs" ],
    [ "continueStatement", "classcontinueStatement.html", "classcontinueStatement" ],
    [ "enclosedExpression", "classenclosedExpression.html", "classenclosedExpression" ],
    [ "Expression", "classExpression.html", "classExpression" ],
    [ "fieldDeclaration", "classfieldDeclaration.html", "classfieldDeclaration" ],
    [ "fieldDeclarations", "classfieldDeclarations.html", "classfieldDeclarations" ],
    [ "forStatement", "classforStatement.html", "classforStatement" ],
    [ "functionCall", "classfunctionCall.html", "classfunctionCall" ],
    [ "ifElseStatements", "classifElseStatements.html", "classifElseStatements" ],
    [ "integerLiteral", "classintegerLiteral.html", "classintegerLiteral" ],
    [ "Literal", "classLiteral.html", "classLiteral" ],
    [ "Location", "classLocation.html", "classLocation" ],
    [ "methodArgument", "classmethodArgument.html", "classmethodArgument" ],
    [ "methodArguments", "classmethodArguments.html", "classmethodArguments" ],
    [ "methodCall", "classmethodCall.html", "classmethodCall" ],
    [ "methodDeclaration", "classmethodDeclaration.html", "classmethodDeclaration" ],
    [ "methodDeclarations", "classmethodDeclarations.html", "classmethodDeclarations" ],
    [ "Node", "unionNode.html", "unionNode" ],
    [ "Parameters", "classParameters.html", "classParameters" ],
    [ "Program", "classProgram.html", "classProgram" ],
    [ "returnStatement", "classreturnStatement.html", "classreturnStatement" ],
    [ "Statement", "classStatement.html", "classStatement" ],
    [ "Statements", "classStatements.html", "classStatements" ],
    [ "stringList", "classstringList.html", "classstringList" ],
    [ "stringLiteral", "classstringLiteral.html", "classstringLiteral" ],
    [ "unaryExpression", "classunaryExpression.html", "classunaryExpression" ],
    [ "Variable", "classVariable.html", "classVariable" ],
    [ "variableDeclaration", "classvariableDeclaration.html", "classvariableDeclaration" ],
    [ "variableDeclarations", "classvariableDeclarations.html", "classvariableDeclarations" ],
    [ "Variables", "classVariables.html", "classVariables" ]
];