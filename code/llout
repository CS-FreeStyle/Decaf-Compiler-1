; ModuleID = 'Decaf compiler jit'

@x = external global i32*

define i1 @main(i32 %b, i32 %a) {
entry:
  %p = alloca i32
  %i = alloca i32
  %a2 = alloca i32
  %b1 = alloca i32
  store i32 %b, i32* %b1
  store i32 %a, i32* %a2
  store i32 0, i32* %i
  br label %loop

loop:                                             ; preds = %ifcont, %entry
  %i3 = phi i32 [ 0, %entry ], [ %NextVal, %ifcont ]
  %a4 = load i32, i32* %a2
  %equalcomparetmp = icmp eq i32 %a4, 5
  br i1 %equalcomparetmp, label %if, label %else

if:                                               ; preds = %loop
  store i32 0, i32* %p
  %p5 = load i32, i32* %p
  br label %ifcont

else:                                             ; preds = %loop
  br label %ifcont

ifcont:                                           ; preds = %else, %if
  %iftmp = phi i32 [ %p5, %if ]
  %i6 = load i32, i32* %i
  %NextVal = add i32 %i6, 1
  store i32 %NextVal, i32* %i
  %loopcondition = icmp ule i32 %i3, 99
  br i1 true, label %loop, label %afterloop

afterloop:                                        ; preds = %ifcont
  ret i1 true
}
